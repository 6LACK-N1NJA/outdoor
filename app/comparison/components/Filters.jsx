'use client'
import { useState, useEffect } from 'react'

import ExpandFiltersButton from './ExpandFiltersButton'
import KnowMore from './KnowMore'
import Link from 'next/link'
import { useRouter, usePathname, useSearchParams } from 'next/navigation'
import FilterSLot from './FilterSlot'

export default function Filters({ comparisonsList, filters, selectedFields, title }) {
  const { replace } = useRouter();
  const searchParams = useSearchParams();
  const pathname = usePathname();
  const params = new URLSearchParams(searchParams);

  useEffect(() => {
    if (selectedFields.length > 0) {
      selectedFields.forEach(({ fieldName, selectedValue }) => {
        const currentValues = params.getAll(fieldName);
        currentValues.push(selectedValue);
        params.set(fieldName, currentValues);
      })
      replace(`${pathname}?${params.toString()}`);
    }
  }, [])
  const filterSelectHandler = (fieldName) => (value) => (e) => {
    const { checked } = e.target;
    const currentValues = params.getAll(fieldName)[0]?.split(',') || [];
    if (checked) {
      currentValues.push(value)
      params.set(fieldName, currentValues);
    } else {
      const filteredValues = currentValues.filter((v) => v !== value);
      params.delete(fieldName);
      if (filteredValues.length > 0) {
        params.set(fieldName, filteredValues);
      }
    }
    replace(`${pathname}?${params.toString()}`);
  }
  const filterKeys = Object.keys(filters);
  const [isExpanded, setIsExpanded] = useState(false)
  const ExpandedButton = () => <button 
    className='border-x-2 border-t-2 text-sm text-zinc-400 rounded-t-md px-2 mx-10 mt-2 text-center hover:bg-zinc-100 hover:bg-opacity-50' 
    onClick={() => setIsExpanded(!isExpanded)}>
      {isExpanded ? '▴ Colapse Filters ▴' : '▾ Expand Filters ▾'}
  </button>;
  return (isExpanded ? 
    <section
      className={`transition delay-20 duration-500 ease-in-out rounded-b-lg border-2 sticky bg-opacity-10 border-t-white ${
        'jalousie-content bg-stone-200 shadow-lg h-100'
      }`}
    >
        <div className='flex flex-row justify-center'>
            <h1 className=' text-2xl'>{title}</h1>
            <KnowMore>Here will be text generated by gpt for this specific category. Seo optimized. May be pretty long</KnowMore>
        </div>
        <div className='jalousie-content flex flex-row justify-around'>
                <div>
                {comparisonsList.map(({ title, slug }) => <p className='ml-7 jalousie-content-opacity' key={`${slug}_filter`}>
                    <Link href={`/comparison/${slug}`}>
                        {title}
                    </Link>
                </p>)}
                </div>
            {filterKeys.map((key) => 
              <FilterSLot 
                key={`filt_${key}`} 
                title={filters[key].title} 
                values={filters[key].filterValues} 
                selectHandler={filterSelectHandler(key)}
                selectedValues={searchParams.get(key)?.split(',') || []}
            />)}
        </div>
        <div className='flex flex-col justify-end items-center'>
            <ExpandedButton/>
        </div>
    </section> :
    <section
      className={`transition delay-20 duration-500 ease-in-out rounded-b-lg border-2 sticky bg-opacity-10 border-t-white ${
        ' bg-stone-100 shadow-sm'
      }`}
    >
        <div className='flex flex-row justify-center'>
            <h1 className=' text-2xl'>{title}</h1>
            <KnowMore>Here will be text generated by gpt for this specific category. Seo optimized. May be pretty long</KnowMore>
        </div>
        <div className='flex flex-col justify-end items-center'>
            <ExpandedButton/>
        </div>
    </section>
  )
}
